'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _example = require('../services/example');

exports.default = {
  namespace: 'example',
  state: {},
  subscriptions: {
    setup: function setup(_ref) {// eslint-disable-line

      var dispatch = _ref.dispatch,
          history = _ref.history;
    }
  },
  effects: {
    login: /*#__PURE__*/regeneratorRuntime.mark(function login(_ref2, _ref3) {
      var query = _ref2.payload.query;
      var call = _ref3.call,
          put = _ref3.put;
      return regeneratorRuntime.wrap(function login$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return (0, _example.login)(query);

            case 2:
              _context.next = 4;
              return put({ type: 'setCurrentUser' });

            case 4:
            case 'end':
              return _context.stop();
          }
        }
      }, login, this);
    })
  },

  reducers: {
    save: function save(state, action) {
      return _extends({}, state, action.payload);
    },
    setCurrentUser: function setCurrentUser(state, action) {
      return _extends({}, state, action.payload);
    }
  }

};