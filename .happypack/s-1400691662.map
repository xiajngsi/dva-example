{"version":3,"sources":["app/routes/IndexPage.js"],"names":["FormItem","Item","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","IndexPage","state","checkNick","check","props","form","validateFields","err","values","console","log","login","handleChange","e","setState","target","checked","force","getFieldDecorator","rules","pattern","required","message","Component","mapStateToProps","mapDispatchToProps","dispatch","query","type","payload","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;;;;;;;AAEA,IAAMA,WAAW,eAAKC,IAAtB;AACA,IAAMC,iBAAiB;AACrBC,YAAU,EAAEC,MAAM,CAAR,EADW;AAErBC,cAAY,EAAED,MAAM,CAAR;AAFS,CAAvB;AAIA,IAAME,iBAAiB;AACrBH,YAAU,EAAEC,MAAM,CAAR,EADW;AAErBC,cAAY,EAAED,MAAM,CAAR,EAAWG,QAAQ,CAAnB;AAFS,CAAvB;;IAIMC,S;;;;;;;;;;;;;;4LACJC,K,GAAQ;AACNC,iBAAW;AADL,K,QAGRC,K,GAAQ,YAAM;AACZ,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CACE,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACf,YAAID,GAAJ,EAAS;AACP;AACD;AACDE,gBAAQC,GAAR,CAAY,YAAZ,EAA0B,MAAKN,KAA/B;AACA,cAAKA,KAAL,CAAWO,KAAX,CAAiBH,MAAjB;AACAC,gBAAQC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACD,OARH;AAUD,K,QACDI,Y,GAAe,UAACC,CAAD,EAAO;AACpB,YAAKC,QAAL,CAAc;AACZZ,mBAAWW,EAAEE,MAAF,CAASC;AADR,OAAd,EAEG,YAAM;AACP,cAAKZ,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAAC,UAAD,CAA/B,EAA6C,EAAEW,OAAO,IAAT,EAA7C;AACD,OAJD;AAKD,K;;;;;6BACQ;AAAA,UACCC,iBADD,GACuB,KAAKd,KAAL,CAAWC,IADlC,CACCa,iBADD;;AAEP,aACE;AAAA;AAAA;AACE;AAAC,kBAAD;AAAA,uBAAcxB,cAAd,IAA8B,OAAM,0BAApC;AACGwB,4BAAkB,QAAlB,EAA4B;AAC3BC,mBAAO,CAAC;AACNC,uBAAS,0DADH;AAENC,wBAAU,IAFJ;AAGNC,uBAAS;AAHH,aAAD;AADoB,WAA5B,EAOC,iDAAO,aAAY,sCAAnB,GAPD;AADH,SADF;AAYE;AAAC,kBAAD;AAAA,uBAAc5B,cAAd,IAA8B,OAAM,cAApC;AACGwB,4BAAkB,UAAlB,EAA8B;AAC7BC,mBAAO,CAAC;AACNE,wBAAU,IADJ;AAENC,uBAAS;AAFH,aAAD;AADsB,WAA9B,EAMC,iDAAO,aAAY,gCAAnB,GAND;AADH,SAZF;AAsBE;AAAC,kBAAD;AAAcxB,wBAAd;AACE;AAAA;AAAA,cAAQ,MAAK,SAAb,EAAuB,SAAS,KAAKK,KAArC;AAAA;AAAA;AADF;AAtBF,OADF;AA8BD;;;;EAvDqB,gBAAMoB,S;;AA0D9B,IAAMC,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5B,SAAO,EAAP;AAED,CAHD;;AAKA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLf,WAAO,eAACgB,KAAD,EAAW;AAChBlB,cAAQC,GAAR,CAAY,OAAZ,EAAqBiB,KAArB;AACA,aAAOD,SAAS,EAAEE,MAAM,eAAR,EAAyBC,SAAS,EAAEF,YAAF,EAAlC,EAAT,CAAP;AACD;AAJI,GAAP;AAMD,CAPD;;kBAUe,kBAAQH,eAAR,EAAyBC,kBAAzB,EAA6C,eAAKK,MAAL,GAAc9B,SAAd,CAA7C,C","file":"IndexPage.js","sourceRoot":"/Users/candice/proj/dva-example","sourcesContent":["import React from 'react'\nimport { connect } from 'dva'\nimport { Form, Input, Button } from 'antd'\nimport './IndexPage.scss'\n\nconst FormItem = Form.Item\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8 },\n}\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 },\n}\nclass IndexPage extends React.Component {\n  state = {\n    checkNick: false,\n  };\n  check = () => {\n    this.props.form.validateFields(\n      (err, values) => {\n        if (err) {\n          return\n        }\n        console.log('this.props', this.props)\n        this.props.login(values)\n        console.log('values', values)\n      },\n    )\n  }\n  handleChange = (e) => {\n    this.setState({\n      checkNick: e.target.checked,\n    }, () => {\n      this.props.form.validateFields(['nickname'], { force: true })\n    })\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <div>\n        <FormItem {...formItemLayout} label='手机号码'>\n          {getFieldDecorator('mobile', {\n            rules: [{\n              pattern: /^(13[0-9]|14[579]|15[0-3,5-9]|17[0135678]|18[0-9])\\d{8}$/,\n              required: true,\n              message: '请输入手机号',\n            }],\n          })(\n            <Input placeholder='请输入手机号' />,\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label='密码'>\n          {getFieldDecorator('password', {\n            rules: [{\n              required: true,\n              message: '密码由数字、字母组成',\n            }],\n          })(\n            <Input placeholder='请输入密码' />,\n          )}\n        </FormItem>\n        <FormItem {...formTailLayout}>\n          <Button type='primary' onClick={this.check}>\n            登录\n          </Button>\n        </FormItem>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = () => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (query) => {\n      console.log('query', query)\n      return dispatch({ type: 'example/login', payload: { query } })\n    },\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(IndexPage))\n"]}