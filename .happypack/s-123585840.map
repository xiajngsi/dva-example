{"version":3,"sources":["app/utils/request.js"],"names":["superagent","statusActions","setStatusAction","status","action","timeout","endPromise","req","_Promise","Promise","resolve","reject","end","err","res","statusAction","isEmpty","setTimeout","error","text","undefined","message","then","promise","_catch","catch","superagentPromisePlugin","patch","sa","Request","prototype","use"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,kDAAnB;;AAEA,IAAMC,gBAAgB,EAAtB;;AAEO,IAAMC,4CAAkB,SAAlBA,eAAkB,CAACC,MAAD,EAASC,MAAT,EAAiC;AAAA,MAAhBC,OAAgB,uEAAN,CAAM;;AAC9DJ,gBAAcE,MAAd,IAAwB,EAAEE,gBAAF,EAAWD,cAAX,EAAxB;AACD,CAFM;;AAIP,SAASE,UAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAMC,WAAWC,OAAjB;;AAEA,SAAO,IAAID,QAAJ,CAAa,UAACE,OAAD,EAAUC,MAAV,EAAqB;AACvCJ,QAAIK,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpB,UAAIA,IAAIX,MAAR,EAAgB;AACd,YAAMY,eAAed,cAAca,IAAIX,MAAlB,CAArB;AACA,YAAI,CAAC,iBAAEa,OAAF,CAAUD,YAAV,CAAL,EAA8B;AAC5B,cAAIA,aAAaV,OAAb,GAAuB,CAA3B,EAA8B;AAC5BY,uBAAWF,aAAaX,MAAxB,EAAgCW,aAAaV,OAA7C;AACD,WAFD,MAEO;AACLU,yBAAaX,MAAb;AACD;AACF;AACF;AACD,UAAMc,QAAQL,OAAOC,IAAII,KAAzB;AACA,UAAIA,KAAJ,EAAW;AACT,YAAIJ,GAAJ,EAAS;AACPI,gBAAMf,MAAN,GAAeW,IAAIX,MAAnB;AACA,cAAIW,IAAIK,IAAJ,KAAaC,SAAb,IAA0BN,IAAIK,IAAJ,KAAa,EAA3C,EAA+C;AAC7CD,kBAAMG,OAAN,GAAgBP,IAAIK,IAApB;AACD;AACF;AACDR,eAAOO,KAAP;AACD,OARD,MAQO;AACLR,gBAAQI,GAAR;AACD;AACF,KAvBD;AAwBD,GAzBM,CAAP;AA0BD;;AAED,SAASQ,IAAT,GAAuB;AACrB,MAAMC,UAAUjB,WAAW,IAAX,CAAhB;AACA,SAAOiB,QAAQD,IAAR,0BAAP;AACD;;AAED,SAASE,MAAT,GAAyB;AACvB,MAAMD,UAAUjB,WAAW,IAAX,CAAhB;AACA,SAAOiB,QAAQE,KAAR,0BAAP;AACD;;AAED;;;;;AAKA,SAASC,uBAAT,CAAiCnB,GAAjC,EAAsC;AACpCA,MAAIe,IAAJ,GAAWA,IAAX;AACAf,MAAIkB,KAAJ,GAAYD,MAAZ;AACA,SAAOjB,GAAP;AACD;;AAED;;;;;AAKAmB,wBAAwBC,KAAxB,GAAgC,SAASA,KAAT,CAAeC,EAAf,EAAmB;AACjDA,KAAGC,OAAH,CAAWC,SAAX,CAAqBR,IAArB,GAA4BA,IAA5B;AACAM,KAAGC,OAAH,CAAWC,SAAX,CAAqBL,KAArB,GAA6BD,MAA7B;AACA,SAAOI,EAAP;AACD,CAJD;;AAMA5B,WAAW+B,GAAX,CAAeL,uBAAf;;kBAEe1B,U;;AAEf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"request.js","sourceRoot":"/Users/candice/proj/dva-example","sourcesContent":["import agentUse from 'superagent-use'\nimport agent from 'superagent'\nimport _ from 'lodash'\n\nconst superagent = agentUse(agent)\n\nconst statusActions = {}\n\nexport const setStatusAction = (status, action, timeout = 0) => {\n  statusActions[status] = { timeout, action }\n}\n\nfunction endPromise(req) {\n  const _Promise = Promise\n\n  return new _Promise((resolve, reject) => {\n    req.end((err, res) => {\n      if (res.status) {\n        const statusAction = statusActions[res.status]\n        if (!_.isEmpty(statusAction)) {\n          if (statusAction.timeout > 0) {\n            setTimeout(statusAction.action, statusAction.timeout)\n          } else {\n            statusAction.action()\n          }\n        }\n      }\n      const error = err || res.error\n      if (error) {\n        if (res) {\n          error.status = res.status\n          if (res.text !== undefined && res.text !== '') {\n            error.message = res.text\n          }\n        }\n        reject(error)\n      } else {\n        resolve(res)\n      }\n    })\n  })\n}\n\nfunction then(...args) {\n  const promise = endPromise(this)\n  return promise.then(...args)\n}\n\nfunction _catch(...args) {\n  const promise = endPromise(this)\n  return promise.catch(...args)\n}\n\n/**\n * Adds req.then and req.catch methods\n * @param {Object} req\n * @return {Object} req\n */\nfunction superagentPromisePlugin(req) {\n  req.then = then\n  req.catch = _catch\n  return req\n}\n\n/**\n * Patches superagent so that every request has req.then and req.catch methods\n * @param {Object} superagent\n * @return {Object} superagent\n */\nsuperagentPromisePlugin.patch = function patch(sa) {\n  sa.Request.prototype.then = then\n  sa.Request.prototype.catch = _catch\n  return sa\n}\n\nsuperagent.use(superagentPromisePlugin)\n\nexport default superagent\n\n// import fetch from 'dva/fetch';\n\n// function parseJSON(response) {\n//   return response.json();\n// }\n\n// function checkStatus(response) {\n//   if (response.status >= 200 && response.status < 300) {\n//     return response;\n//   }\n\n//   const error = new Error(response.statusText);\n//   error.response = response;\n//   throw error;\n// }\n\n// /**\n//  * Requests a URL, returning a promise.\n//  *\n//  * @param  {string} url       The URL we want to request\n//  * @param  {object} [options] The options we want to pass to \"fetch\"\n//  * @return {object}           An object containing either \"data\" or \"err\"\n//  */\n// export default function request(url, options) {\n//   return fetch(url, options)\n//     .then(checkStatus)\n//     .then(parseJSON)\n//     .then(data => ({ data }))\n//     .catch(err => ({ err }));\n// }\n"]}